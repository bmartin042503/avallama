<!-- 
Copyright (c) Márk Csörgő and Martin Bartos
Licensed under the MIT License. See LICENSE file for details.
-->

<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="clr-namespace:avallama.Controls">
    <!-- Preview -->
    <Design.PreviewWith>
        <!-- Dark/Light mód váltáshoz a Previewben írd át a RequestedThemeVariant értékét -->
        <ThemeVariantScope RequestedThemeVariant="Light">
            <Border Padding="20" Background="{DynamicResource Surface}">
                <StackPanel Orientation="Vertical" Spacing="15" Background="{DynamicResource Surface}">
                    <Button Classes="small" Content="Small Button" />
                    <Button Content="Default Button" />
                    <Button Classes="large" Content="Large Button" />
                    <Button Classes="secondaryButton" Content="Secondary Button" />
                    <!-- lessSecondaryButton: olyan gombok amik olyanok mint a secondary csak még inkább elbújnak a primary elől -->
                    <Button Classes="lessSecondaryButton" Content="Less Secondary Button" />
                    <Button Content="Disabled Button" IsEnabled="False" />
                    <Button Classes="windowManager hide">
                        <controls:DynamicSvg Path="/Assets/Svg/hide.svg"
                                             Width="12" />
                    </Button>
                    <Button Classes="windowManager minmax">
                        <controls:DynamicSvg Path="/Assets/Svg/maximize.svg"
                                             Width="12" />
                    </Button>
                    <Button Classes="windowManager close">
                        <controls:DynamicSvg Path="/Assets/Svg/close.svg"
                                             Width="12" />
                    </Button>
                    <Button Classes="avallamaWhite" Content="Icon Button" />
                    <Button Classes="svgButton">
                        <controls:DynamicSvg Path="/Assets/Svg/sidebar.svg" Width="20"
                                             FillColor="{DynamicResource Primary}" />
                    </Button>
                    <Button Classes="errorButton" Content="Close" />
                </StackPanel>
            </Border>
        </ThemeVariantScope>
    </Design.PreviewWith>

    <!-- Alapértelmezett gombok -->
    <Style Selector="Button">
        <Setter Property="Background" Value="{DynamicResource Primary}" />
        <Setter Property="Foreground" Value="{DynamicResource OnPrimary}" />
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Padding" Value="20, 8" />
        <Setter Property="FontFamily" Value="{StaticResource Manrope}" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <!-- button háttér animációja, ezt egyelőre kivettem mert lehet hogy inkább csak ront a megjelenésen
    <Style Selector="Button /template/ ContentPresenter">
        <Setter Property="Transitions">
            <Transitions>
                <BrushTransition Property="Background" Duration="0:0:0.12"/>
            </Transitions>
        </Setter>
    </Style>
    -->

    <Style Selector="Button:pointerover /template/ ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource PrimaryContainer}" />
        <Setter Property="Foreground" Value="{DynamicResource OnPrimaryContainer}" />
    </Style>

    <!-- Kicsi gomb -->
    <Style Selector="Button.small">
        <Setter Property="CornerRadius" Value="18" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Padding" Value="20, 4" />
    </Style>

    <!-- Nagy gombok -->
    <Style Selector="Button.large">
        <Setter Property="CornerRadius" Value="30" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Padding" Value="32.5, 8.5" />
    </Style>

    <!-- Ablakkezelő gombok -->
    <Style Selector="Button.windowManager">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="CornerRadius" Value="6" />
        <Setter Property="Padding" Value="12" />
    </Style>

    <!-- DynamicSvg beállítás
    Hide, Maximize, Minimize: FillColor
    Close: StrokeColor
     -->

    <Style Selector="Button.windowManager /template/ ContentPresenter">
        <Setter Property="Transitions">
            <Transitions />
        </Setter>
    </Style>

    <Style Selector="Button.windowManager.hide controls|DynamicSvg">
        <Setter Property="FillColor" Value="{DynamicResource Primary}" />
    </Style>

    <Style Selector="Button.windowManager.minmax controls|DynamicSvg">
        <Setter Property="FillColor" Value="{DynamicResource Primary}" />
    </Style>

    <Style Selector="Button.windowManager.close controls|DynamicSvg">
        <Setter Property="StrokeColor" Value="{DynamicResource Primary}" />
    </Style>

    <Style Selector="Button.windowManager.hide:pointerover controls|DynamicSvg">
        <Setter Property="FillColor" Value="{DynamicResource OnPrimary}" />
    </Style>

    <Style Selector="Button.windowManager.minmax:pointerover controls|DynamicSvg">
        <Setter Property="FillColor" Value="{DynamicResource OnPrimary}" />
    </Style>

    <Style Selector="Button.windowManager.close:pointerover controls|DynamicSvg">
        <Setter Property="StrokeColor" Value="{DynamicResource OnPrimary}" />
    </Style>

    <Style Selector="Button.windowManager:pointerover /template/ ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource Primary}" />
    </Style>

    <Style Selector="Button.windowManager.close:pointerover /template/ ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource Error}" />
    </Style>

    <Style Selector="Button.svgButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <Style Selector="Button.svgButton:pointerover /template/ ContentPresenter">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="Transparent" />
    </Style>

    <!-- thank you bmartin -->
    <Style Selector="Button.avallamaWhite">
        <Setter Property="MinWidth" Value="45" />
        <Setter Property="Background" Value="{DynamicResource Primary}" />
        <Setter Property="Foreground" Value="{DynamicResource OnPrimary}" />
        <!--
        <Setter Property="Transitions">
            <Setter.Value>
                <Transitions>
                    <BrushTransition Property="Foreground" Duration="0:0:0.05" />
                    <BrushTransition Property="Background" Duration="0:0:0.05" />
                </Transitions>
            </Setter.Value>
        </Setter>
        -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="8"
                            Padding="14,8">
                        <StackPanel Orientation="Horizontal"
                                    Spacing="10"
                                    HorizontalAlignment="Center">
                            <controls:DynamicSvg Path="/Assets/Svg/avallama-logo-white.svg"
                                                 Width="10"
                                                 FillColor="{TemplateBinding Foreground}"
                                                 HorizontalAlignment="Center" />
                            <TextBlock x:Name="ButtonTextContent"
                                       Text="{TemplateBinding Content}"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontSize="10"
                                       Background="{TemplateBinding Background}"
                                       VerticalAlignment="Center" />
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style Selector="Button.avallamaWhite:pointerover">
        <Setter Property="Foreground" Value="{DynamicResource OnPrimaryContainer}" />
        <Setter Property="Background" Value="{DynamicResource PrimaryContainer}" />
    </Style>

    <Style Selector="Button.secondaryButton">
        <Setter Property="Background" Value="{DynamicResource Secondary}" />
        <Setter Property="Foreground" Value="{DynamicResource OnSecondary}" />
    </Style>

    <Style Selector="Button.secondaryButton:pointerover /template/ ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource SecondaryContainer}" />
        <Setter Property="Foreground" Value="{DynamicResource OnSecondaryContainer}" />
    </Style>

    <Style Selector="Button.lessSecondaryButton">
        <Setter Property="Background" Value="{DynamicResource SecondaryContainer}" />
        <Setter Property="Foreground" Value="{DynamicResource OnSecondaryContainer}" />
    </Style>

    <Style Selector="Button.lessSecondaryButton:pointerover /template/ ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource Secondary}" />
        <Setter Property="Foreground" Value="{DynamicResource OnSecondary}" />
    </Style>

    <Style Selector="Button.errorButton">
        <Setter Property="Background" Value="{DynamicResource ErrorContainer}" />
        <Setter Property="Foreground" Value="{DynamicResource OnErrorContainer}" />
    </Style>

    <Style Selector="Button.errorButton:pointerover /template/ ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource Error}" />
        <Setter Property="Foreground" Value="{DynamicResource OnError}" />
    </Style>
</Styles>